/*
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 */

//
//  MainViewController.h
//  OfficialApplication
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright ___ORGANIZATIONNAME___ ___YEAR___. All rights reserved.
//

#import "MainViewController.h"
#import "MapViewController.h"
#import "CreateColor.h"

MainViewController* __current;
@implementation MainViewController

- (id)initWithNibName:(NSString*)nibNameOrNil bundle:(NSBundle*)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Uncomment to override the CDVCommandDelegateImpl used
        // _commandDelegate = [[MainCommandDelegate alloc] initWithViewController:self];
        // Uncomment to override the CDVCommandQueue used
        // _commandQueue = [[MainCommandQueue alloc] initWithViewController:self];
    }
    return self;
}

- (id)init
{
    self = [super init];
    if (self) {
        // Uncomment to override the CDVCommandDelegateImpl used
        // _commandDelegate = [[MainCommandDelegate alloc] initWithViewController:self];
        // Uncomment to override the CDVCommandQueue used
        // _commandQueue = [[MainCommandQueue alloc] initWithViewController:self];
    }
    __current = self;
    return self;
}

+(MainViewController*)current {
    return __current;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark View lifecycle

- (void)viewWillAppear:(BOOL)animated
{
    // View defaults to full size.  If you want to customize the view's size, or its subviews (e.g. webView),
    // you can do so here.
    //Lower screen 20px on ios 7
    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7) {
        if(self.webView.frame.origin.y == 0) {
            CGRect viewBounds = [self.webView bounds];
            viewBounds.origin.y = 20;
            viewBounds.size.height = viewBounds.size.height - 20;
            self.webView.frame = viewBounds;
        }
    }
    [super viewWillAppear:animated];
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    // 画面のサイズを取得
    CGRect viewBounds = [[UIScreen mainScreen] applicationFrame];
    // 店舗マップのViewのサイズの設定
    // header 49, footer 60の想定
    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7) {
        customView_ = [[UIView alloc]
                       initWithFrame:CGRectMake(0.0,
                                                69.0,
                                                viewBounds.size.width,
                                                viewBounds.size.height - 69 - 60)];
    }
    else {
        customView_ = [[UIView alloc]
                       initWithFrame:CGRectMake(0.0,
                                                49.0,
                                                viewBounds.size.width,
                                                viewBounds.size.height - 49 - 60)];
    }
    // 背景色の設定
    customView_.backgroundColor = [UIColor colorWithRed:1.0f green:0.0f blue:0.0f alpha:0.5f];
    // viewの初期状態は、非表示状態
    customView_.hidden = true;
    couponWebView = [[UIWebView alloc]
                     initWithFrame:CGRectMake(customView_.frame.origin.x, customView_.frame.origin.y, customView_.frame.size.width, viewBounds.size.height + 17 - 60 - customView_.frame.origin.y)];
    couponWebView.hidden = true;
    couponWebView.delegate = self;
    couponWebView.tag = 1;
    couponWebView.scalesPageToFit = YES;
    couponWebView.scrollView.delegate = self;
    couponWebView.scrollView.bounces = NO;
    couponWebView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:couponWebView];
    couponUrl = @"";
    // customViewを追加する。
    [self.view addSubview:customView_];
    
    reloadView = [[UIView alloc]initWithFrame:CGRectMake(viewBounds.size.width - 65, 28.0f, 55.0f, 33.0f)];
    [self.view addSubview:reloadView];
    reloadView.backgroundColor = [UIColor clearColor];
    reloadView.hidden = YES;
    [reloadView addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(onReloadData)]];
    
    alertNetworkCoupon = [[UIView alloc]initWithFrame:CGRectMake(0.0f, 0.0f, customView_.frame.size.width, 38.0f)];
    alertNetworkCoupon.backgroundColor = [CreateColor netNotificationBackgroundColor];
    UILabel *notifLabel = [[UILabel alloc]initWithFrame:CGRectMake(78.0f, 0, customView_.frame.size.width-65, 38)];
    notifLabel.backgroundColor = [UIColor clearColor];
    notifLabel.textColor = [UIColor whiteColor];
    notifLabel.font = [UIFont systemFontOfSize:13];
    notifLabel.text = @"インターネット接続がありません";
    
    UIImage *img = [UIImage imageNamed:@"common_ic07.png"];
    UIImageView * imageView = [[UIImageView alloc]initWithImage:img];
    imageView.frame = CGRectMake(50, 8, 22, 22);
    [alertNetworkCoupon addSubview:imageView];
    
    alertNetworkCoupon.hidden = YES;
    [alertNetworkCoupon addSubview:notifLabel];
    [couponWebView addSubview:alertNetworkCoupon];
}

- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView {
    return nil;
}

-(void)onReloadData{
    if(![couponUrl  isEqualToString: @""]){
        dispatch_async(dispatch_get_main_queue(), ^{
            NSURL *nsurl = [NSURL URLWithString:couponUrl];
            NSURLRequest *nsrequest=[NSURLRequest requestWithURL:nsurl];
            [couponWebView loadRequest:nsrequest];
        });
    }
    
}

-(void)toggleAlertNetworkCoupon:(BOOL) status{
    if(status){
        alertNetworkCoupon.hidden = NO;
    }else{
        alertNetworkCoupon.hidden = YES;
    }
}
-(void) showCouponView:(BOOL) isShow widthUrl:(NSString*) theUrl{
    if(isShow){
        if([couponUrl  isEqual: @""]){
            dispatch_async(dispatch_get_main_queue(), ^{
                NSString *url = theUrl;
                couponUrl = url;
                NSURL *nsurl = [NSURL URLWithString:url];
                NSURLRequest *nsrequest=[NSURLRequest requestWithURL:nsurl];
                [couponWebView loadRequest:nsrequest];
            });
        }
        reloadView.hidden = NO;
        couponWebView.hidden = NO;
    }else{
        couponWebView.hidden = YES;
        reloadView.hidden = YES;
    }
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
    map_ = nil;
    customView_ = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return [super shouldAutorotateToInterfaceOrientation:interfaceOrientation];
}

/* Comment out the block below to over-ride */

/*
 - (UIWebView*) newCordovaViewWithFrame:(CGRect)bounds
 {
 return[super newCordovaViewWithFrame:bounds];
 }
 */

#pragma mark UIWebDelegate implementation

- (void)webViewDidFinishLoad:(UIWebView*)theWebView
{
    // Black base color for background matches the native apps
    theWebView.backgroundColor = [UIColor blackColor];
    
    NSString* URLString = [[theWebView.request.URL standardizedURL] absoluteString];
    // map.htmlを開いているかどうか判断する。
    NSRange match_map = [URLString rangeOfString:@"map.html"];
    
    
    
    // map.htmlの場合
    if (match_map.location != NSNotFound) {
        
        // viewを表示状態にする。
        if( customView_ != nil ){
            
            // mapの呼び出し
            if (map_ == nil) {
                
                map_ = [[MapViewController alloc] initWithView:self];
                [map_ viewLoad:customView_];
            }
            else {
                map_.reloadView.hidden = NO;
                [map_ setUpMap];
            }
            
            customView_.hidden = NO;
        }
        
    }
    // map.htmlではない場合、表示しない。
    else{
        
        // viewを非表示状態にする。
        if( customView_ != nil ){
            customView_.hidden = YES;
            
            if (map_ != nil) {
                map_.reloadView.hidden = YES;
                [map_ gpsLocationOff];
            }
        }
    }
    
    
    return [super webViewDidFinishLoad:theWebView];
}

/* Comment out the block below to over-ride */

/*
 
 - (void) webViewDidStartLoad:(UIWebView*)theWebView
 {
 return [super webViewDidStartLoad:theWebView];
 }
 
 - (void) webView:(UIWebView*)theWebView didFailLoadWithError:(NSError*)error
 {
 return [super webView:theWebView didFailLoadWithError:error];
 }
 */

- (BOOL) webView:(UIWebView*)theWebView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationType
{
    
    if(theWebView.tag == 1){
        if (navigationType == UIWebViewNavigationTypeLinkClicked) {
//            NSURL *url = [request URL];
            NSString *url = [[request URL] absoluteString];
            //[[UIApplication sharedApplication] openURL:url];
            [self.webView stringByEvaluatingJavaScriptFromString:
             [NSString stringWithFormat:@"window.open(\"%@\",\"_blank\",\"closebuttoncaption=完了,EnableViewPortScale=yes,location=no\")", url]];
            return NO;
        }
    }
    
    return [super webView:theWebView shouldStartLoadWithRequest:request navigationType:navigationType];
}

@end

@implementation MainCommandDelegate

/* To override the methods, uncomment the line in the init function(s)
 in MainViewController.m
 */

#pragma mark CDVCommandDelegate implementation

- (id)getCommandInstance:(NSString*)className
{
    return [super getCommandInstance:className];
}

- (NSString*)pathForResource:(NSString*)resourcepath
{
    return [super pathForResource:resourcepath];
}

@end

@implementation MainCommandQueue

/* To override, uncomment the line in the init function(s)
 in MainViewController.m
 */
- (BOOL)execute:(CDVInvokedUrlCommand*)command
{
    return [super execute:command];
}

@end
